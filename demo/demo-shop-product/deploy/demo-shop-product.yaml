apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: gd-demo-shop
  name: demo-shop-product
spec:
  hosts:
    - demo-shop-product
  http:
    - route:
        - destination:
            host: demo-shop-product
#            subset: v1
---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  namespace: gd-demo-shop
  name: demo-shop-product-ingress
spec:
  hosts:
    - '*'
  gateways:
    - demo-shop-gateway
  http:
    - match:
        - uri:
            prefix: "/product/"
      rewrite:
        uri: "/"
      route:
        - destination:
            host: demo-shop-product
            subset: v2
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: demo-shop-product
  namespace: gd-demo-shop
spec:
  host: demo-shop-product
  subsets:
    - name: v1
      labels:
        version: v1
    - name: v2
      labels:
        version: v2
---

apiVersion: v1
kind: Service
metadata:
  name: demo-shop-product
  namespace: gd-demo-shop
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http-web
  selector:
    app: demo-shop-product
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-shop-product-v1
  namespace: gd-demo-shop
  labels:
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-shop-product
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-shop-product
        version: v1
    spec:
      containers:
        - image: 10.0.10.1:5000/gd-demo-shop-product:latest
          name: shop-product
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            successThreshold: 2
            timeoutSeconds: 3
            initialDelaySeconds: 30
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            initialDelaySeconds: 30
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
            limits:
              cpu: 800m
              memory: 1Gi
#          volumeMounts:
#            - name: config
#              mountPath: /etc/nginx/conf.d/
#      volumes:
#        - name: config
#          configMap:
#            name: config-nginx
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-shop-product-v2
  namespace: gd-demo-shop
  labels:
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-shop-product
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-shop-product
        version: v2
    spec:
      containers:
        - image: 10.0.10.1:5000/gd-demo-shop-product:v2
          imagePullPolicy: Always
          name: shop-product
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            successThreshold: 2
            timeoutSeconds: 3
            initialDelaySeconds: 30
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            initialDelaySeconds: 30
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
            limits:
              cpu: 800m
              memory: 1Gi
---
